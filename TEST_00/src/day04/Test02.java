package day04;

/*
 	반복문
 		특정 명령을 반복하도록 하는 명령
 		
 		종류]
 			1. for 명령
 				: 명령문 형식 자체에 카운터변수(반복할 횟수를 지정하는 변수)가 만들어진다
 			2. while 명령 
 				: 형식에 카운터변수 정의가 없다.
 					따라서 반복문이 실행되기 전에 카운터변수가 만들어져야 한다
 					또는 반복실행을 종료할 조건을 반드시 추가해주어야 한다
 					
 	1. for 명령
 		형식]
 			(1)
 			for(카운터변수 선언&초기화 -(2); 조건식 -(3); 증감식 -(4)){
 				실행문 -(5)
 			}
 			-(6)
 			실행순서 : 1 -> 2 -> 
 					3 -> 5 -> 4 -> 3 -> 5 -> 4 -> ...
 					(조건식이 false일 때까지 반복)
 					
 			참고]
 				(2)번은 처음 딱 한 번만 실행한다. 주로 카운터변수를 선언&초기화하는 목적으로 사용한다
 				(2)번은 필요 없으면 생략해도 무방하나 세미콜론(;)은 남겨야 한다
 				(2)번에서 만들어진 카운터변수는 for명령문 내에서만 사용하는 지역변수
 					# 지역변수 : 블럭( {} )을 빠져나가면 사라지는 변수(사용할 수 없게 됨)
 				(4)번 부분은 반복문의 내용이 실행이 끝나면 읽는 부분
 					==> 반복횟수만큼 반복
 					주로 카운터를 증가시키는 목적으로 사용한다
 					
 			참고]
 				for 명령은 선조건 처리 명령이다(조건을 먼저 검수하고 실행문 처리)
 				따라서 조건이 맞지 않는다면 한 번도 실행하지 않을 수 있다
 				
 			참고]
 				for 명령문의 ( ; ; ) 안의 내용은 필요에 따라 생략해도 무방하다
 					==> 조건이 항상 true로 처리됨
 				이 경우, 이 반복문은 무한반복을 하는 무한루프로 처리가 된다
 				
 			참고]
 				중첩 for 명령
 				
 					조건문과 마찬가지로 반복문도 중첩해서 사용할 수 있다
 					
 					**
 					안쪽 for 명령은 바깥쪽 for 명령이 다음 회차로 반복하면
 					처음부터 다시 시작한다
 					
 					for(int i = 0; i < 10; i++){
 					
 						for(int j = 0; j < 5; j++){
 							
 						}
 					}
 */
public class Test02 {

	/*
	 	예제]
	 		구구단 9단을 출력하세요
	 */
	public static void main(String[] args) {
		
		int sum = 0;
		for(int i = 1; i<=100; i++) {
			sum = sum+i;
		}
		System.out.println("1부터 100까지의 합은 " + sum + " 입니다");

		// 계산 결과가 9번 반복되서 출력되면 된다
		/*for(int i = 0; i < 9; i++) {
			System.out.println("9 x "+ (i+1) + " = " + (9 * (i+1)));
		}*/

	}

}
