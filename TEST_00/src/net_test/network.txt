# NetWork

용어
	1. IP주소
		==> 각각의 통신장비(컴퓨터, 스마트폰, 기계장비, ...)에 부여된 주소
			즉, 상대방과 네트워크를 구성하기 위해서 부여된
			고유의 장비 주소를 의미한다
			
			결론]
				네트워크 통신을 상대방과 하기 위해서는
				필수적으로 상대방의 IP(주소)를 알아야 한다
				통신장비에는 IP가 반드시 존재해야 한다
				
		IP 확인 방법
			1) cmd 창을 열고
			2) ipconfig를 입력한다
			
		참고]
			IPv4	-	4개의 숫자로 구성된 IP주소 ==> 현재 계속 사용 중
			IPv6	-	6자리로 구성된 IP주소 (16진수로 구성)
						==> 미래를 위해서 준비해놓은 확장된 IP주소
						
	2. Port 번호
		==> 각각의 프로그램에 부여되는 네트워크 번호를 의미
			같은 ip를 사용하는 컴퓨터에서 실행되는
			여러 개의 프로그램(서비스)을 구분하기 위한 번호
			
			웹 서버의 경우는 80번 포트를 사용하고
			만약 다른 포트를 사용한다면(90번)
				http://www.euns.com:90
				
			즉, 같은 네트워크 장비로 들어온 데이터의 소유자(프로그램)을 구분하기 위한 번호
			
			포트번호는
				1 ~ 36xxx 의 숫자 중 하나를 사용한다
				
			따라서 포트번호가 중복되는 프로그램은 같은 네트워크 장비 안에서 실행할 수 없다
			
			따라서 개인이 만드는 네트워크 프로그램은
			될 수 있으면 30000 이상의 번호를 사용하는 것을 권고한다
			
	3. 프로토콜(Protocol)
		==> 네트워크에서 상대방과 접속하는 방법이나 데이터를 주고받는 방법 등
		네트워크 구성을 원할하게 하기 위해서 준비된 규약
			==> 프로그램도 아니고 하드웨어도 아닌 규약
			
		1) HTTP : 인터넷 통신을 위한 프로토콜
		
		2) TCP/IP : 접속형 네트워크를 위한 프로토콜
					상대방과 반드시 접속이 된 상태에서 통신이 이루어지는 방법
					
					장점: 안정적이다(신뢰성)
					단점: 통신회선 손실률이 크다
		
		3) UDP : 비접속형 네트워크를 위한 프로토콜
				상대방과 접속하지 않아도 통신이 이루어지는 방법
				
				장점: 통신회선 손실률이 작다
				단점: 안정적이지 못 하다
				
=====================================================

UDP 통신
	비접속형 네트워크
	성대방과 접속을 하지 않은 상태에서 일방적으로 데이터를 보내는 방식의 네트워크의 일종
	상대방은 데이터를 필요에 따라서 받을 수 있게 된다
	
	용어]
		패킷
			==> 상대방과 접속을 하지 않은 상태에서
				데이터를 네트워크 회선에 흘려보내는 방식이므로
				이 데이터가 누구에게 가는지를 데이터와 함께 묶어주어야 한다
				이처럼 데이터와 상대방의 주소를 묶은 상태를
				'패킷'이라고 표현한다
				UDP 통신은 이 패킷을 이용해서 데이터를 주고 받는 방식으로 처리된다
				
자바에서 UDP 통신을 하기 위한 클래스

	DatagramSocket
	==> UDP 통신을 위한 전화기에 해당하는 소켓
	
		생성방법]
		
			1. DatagramSocket(int port)
				==> 네트워크에 흘러다니는 데이터를 받기 위한 소켓
			
			2. DatagramSocket()
				==> 일방적으로 상대방에게 데이터를 보내기 위한 소켓
				
			주요함수]
			==> UDP 통신은 내부적으로 스트림을 이용하지만
				외부적으로는 패킷을 처리해야 하기 때문에
				패킷을 주고 받는 명령(함수)이 존재한다
				
				send(DatagramSocket p)
					==> 데이터(패킷)를 보내는 함수
					
				receive(DatagramSocket p)
					==> 데이터를 받는 함수
					
	DatagramPacket
	==> UDP 통신에서 데이터를 주고 받는 단위가 되는 패킷을 만들어주는 클래스
	
		생성방법]
			1. DatagramPacket(byte[] buf, int length)
				==> 네트워크에 흘러다니는 패킷을 받기 위한 패킷
				
			2. DatagramPacket(byte[] buf, int length, InetAddress address, int port)
				==> 상대방에게 데이터를 보내기 위한 패킷
				
		주요함수]
		==> 패킷은 데이터와 상대방 정보 + 자신의 정보를 묶어 놓은 포장의 역할을 한다
		
			상대방의 정보를 알아내는 함수
			
			1. getAddress()
				==> 보낸 사람의 주소를 알아내는 함수
				
			2. getData()
				==> 실제 데이터를 알아내는 함수
				
			3. getLength()
				==> 데이터의 크기를 알아내는 함수
				
			4. getPort()
				==> 포트번호를 알아내는 함수